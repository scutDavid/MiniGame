FFunctionCollection *FC = nullptr;
FParameterCollection *PC = nullptr;

FC = &GDefaultParamCollection.Add(TEXT("UGameMapsSettings"));
PC = &FC->Functions.Add(TEXT("SetSkipAssigningGamepadToPlayer1"));
PC->Parameters.Add(TEXT("bSkipFirstPlayer"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("AActor"));
PC = &FC->Functions.Add(TEXT("MakeNoise"));
PC->Parameters.Add(TEXT("Loudness"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("WasRecentlyRendered"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.200000f));
PC = &FC->Functions.Add(TEXT("GetAttachedActors"));
PC->Parameters.Add(TEXT("bResetArray"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("GetAllChildActors"));
PC->Parameters.Add(TEXT("bIncludeDescendants"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetActorLabel"));
PC->Parameters.Add(TEXT("bMarkDirty"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("DetachRootComponentFromParent"));
PC->Parameters.Add(TEXT("bMaintainWorldPosition"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("K2_AttachRootComponentToActor"));
PC->Parameters.Add(TEXT("bWeldSimulatedBodies"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("K2_AttachRootComponentTo"));
PC->Parameters.Add(TEXT("bWeldSimulatedBodies"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UAnimInstance"));
PC = &FC->Functions.Add(TEXT("IsSyncGroupBetweenMarkers"));
PC->Parameters.Add(TEXT("bRespectMarkerOrder"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("Montage_SetPlayRate"));
PC->Parameters.Add(TEXT("NewPlayRate"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Montage_Play"));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bStopAllMontages"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopSlotAnimation"));
PC->Parameters.Add(TEXT("InBlendOutTime"), new FFloatParamValue(0.250000f));
PC = &FC->Functions.Add(TEXT("PlaySlotAnimationAsDynamicMontage"));
PC->Parameters.Add(TEXT("BlendInTime"), new FFloatParamValue(0.250000f));
PC->Parameters.Add(TEXT("BlendOutTime"), new FFloatParamValue(0.250000f));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("LoopCount"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("BlendOutTriggerTime"), new FFloatParamValue(-1.000000f));
PC = &FC->Functions.Add(TEXT("PlaySlotAnimation"));
PC->Parameters.Add(TEXT("BlendInTime"), new FFloatParamValue(0.250000f));
PC->Parameters.Add(TEXT("BlendOutTime"), new FFloatParamValue(0.250000f));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("LoopCount"), new FIntParamValue(1));

FC = &GDefaultParamCollection.Add(TEXT("UAvoidanceManager"));
PC = &FC->Functions.Add(TEXT("RegisterMovementComponent"));
PC->Parameters.Add(TEXT("AvoidanceWeight"), new FFloatParamValue(0.500000f));

FC = &GDefaultParamCollection.Add(TEXT("UCanvas"));
PC = &FC->Functions.Add(TEXT("K2_TextSize"));
PC->Parameters.Add(TEXT("Scale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawPolygon"));
PC->Parameters.Add(TEXT("Radius"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("NumberOfSides"), new FIntParamValue(3));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawBox"));
PC->Parameters.Add(TEXT("Thickness"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawBorder"));
PC->Parameters.Add(TEXT("CoordinateSize"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("BorderScale"), new FVector2DParamValue(FVector2D(0.100000f,0.100000f)));
PC->Parameters.Add(TEXT("BackgroundScale"), new FVector2DParamValue(FVector2D(0.100000f,0.100000f)));
PC->Parameters.Add(TEXT("PivotPoint"), new FVector2DParamValue(FVector2D(0.500000f,0.500000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawText"));
PC->Parameters.Add(TEXT("Scale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("ShadowColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("ShadowOffset"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("OutlineColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawMaterial"));
PC->Parameters.Add(TEXT("CoordinateSize"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("PivotPoint"), new FVector2DParamValue(FVector2D(0.500000f,0.500000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawTexture"));
PC->Parameters.Add(TEXT("CoordinateSize"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("BlendMode"), new FByteParamValue(2));
PC->Parameters.Add(TEXT("PivotPoint"), new FVector2DParamValue(FVector2D(0.500000f,0.500000f)));
PC = &FC->Functions.Add(TEXT("K2_DrawLine"));
PC->Parameters.Add(TEXT("Thickness"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("RenderColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UCheatManager"));
PC = &FC->Functions.Add(TEXT("BugIt"));
PC->Parameters.Add(TEXT("ScreenShotDescription"), new FStringParamValue(TEXT("")));

FC = &GDefaultParamCollection.Add(TEXT("UGameUserSettings"));
PC = &FC->Functions.Add(TEXT("EnableHDRDisplayOutput"));
PC->Parameters.Add(TEXT("DisplayNits"), new FIntParamValue(1000));
PC = &FC->Functions.Add(TEXT("RunHardwareBenchmark"));
PC->Parameters.Add(TEXT("WorkScale"), new FIntParamValue(10));
PC->Parameters.Add(TEXT("CPUMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("GPUMultiplier"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UInputSettings"));
PC = &FC->Functions.Add(TEXT("RemoveAxisMapping"));
PC->Parameters.Add(TEXT("bForceRebuildKeymaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddAxisMapping"));
PC->Parameters.Add(TEXT("bForceRebuildKeymaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("RemoveActionMapping"));
PC->Parameters.Add(TEXT("bForceRebuildKeymaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddActionMapping"));
PC->Parameters.Add(TEXT("bForceRebuildKeymaps"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("AAmbientSound"));
PC = &FC->Functions.Add(TEXT("FadeIn"));
PC->Parameters.Add(TEXT("FadeVolumeLevel"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("AHUD"));
PC = &FC->Functions.Add(TEXT("GetActorsInSelectionRectangle"));
PC->Parameters.Add(TEXT("bIncludeNonCollidingComponents"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("DrawMaterialTriangle"));
PC->Parameters.Add(TEXT("V0_Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("V1_Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("V2_Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawMaterialSimple"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawMaterial"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawTextureSimple"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawTexture"));
PC->Parameters.Add(TEXT("TintColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("BlendMode"), new FByteParamValue(2));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawText"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("GetTextSize"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("ALevelScriptActor"));
PC = &FC->Functions.Add(TEXT("SetCinematicMode"));
PC->Parameters.Add(TEXT("bHidePlayer"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAffectsHUD"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("APawn"));
PC = &FC->Functions.Add(TEXT("AddMovementInput"));
PC->Parameters.Add(TEXT("ScaleValue"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PawnMakeNoise"));
PC->Parameters.Add(TEXT("bUseNoiseMakerLocation"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("APlayerCameraManager"));
PC = &FC->Functions.Add(TEXT("PlayCameraAnim"));
PC->Parameters.Add(TEXT("Rate"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("StopAllCameraShakesFromSource"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopAllInstancesOfCameraShakeFromSource"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopAllCameraShakes"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopAllInstancesOfCameraShake"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopCameraShake"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StartMatineeCameraShakeFromSource"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("StartCameraShakeFromSource"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("StartMatineeCameraShake"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("StartCameraShake"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("APostProcessVolume"));
PC = &FC->Functions.Add(TEXT("AddOrUpdateBlendable"));
PC->Parameters.Add(TEXT("InWeight"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("APlayerController"));
PC = &FC->Functions.Add(TEXT("PlayHapticEffect"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("ClientStopCameraShakesFromSource"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("ClientStopCameraShake"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("ClientStartCameraShake"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("ClientPlayCameraAnim"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("Rate"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("AGameModeBase"));
PC = &FC->Functions.Add(TEXT("K2_FindPlayerStart"));
PC->Parameters.Add(TEXT("IncomingName"), new FStringParamValue(TEXT("")));

FC = &GDefaultParamCollection.Add(TEXT("ACharacter"));
PC = &FC->Functions.Add(TEXT("PlayAnimMontage"));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UMovementComponent"));
PC = &FC->Functions.Add(TEXT("K2_MoveUpdatedComponent"));
PC->Parameters.Add(TEXT("bSweep"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UPhysicalAnimationComponent"));
PC = &FC->Functions.Add(TEXT("ApplyPhysicalAnimationProfileBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("ApplyPhysicalAnimationSettingsBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USceneComponent"));
PC = &FC->Functions.Add(TEXT("K2_DetachFromComponent"));
PC->Parameters.Add(TEXT("bCallModify"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("DetachFromParent"));
PC->Parameters.Add(TEXT("bCallModify"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("K2_AttachTo"));
PC->Parameters.Add(TEXT("bWeldSimulatedBodies"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UTimelineComponent"));
PC = &FC->Functions.Add(TEXT("SetPlaybackPosition"));
PC->Parameters.Add(TEXT("bFireUpdate"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UInterpToMovementComponent"));
PC = &FC->Functions.Add(TEXT("RestartMovement"));
PC->Parameters.Add(TEXT("InitialDirection"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UAudioComponent"));
PC = &FC->Functions.Add(TEXT("PlayQuantized"));
PC->Parameters.Add(TEXT("InFadeVolumeLevel"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("FadeIn"));
PC->Parameters.Add(TEXT("FadeVolumeLevel"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UCameraComponent"));
PC = &FC->Functions.Add(TEXT("AddOrUpdateBlendable"));
PC->Parameters.Add(TEXT("InWeight"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UCameraShakeSourceComponent"));
PC = &FC->Functions.Add(TEXT("StopAllCameraShakes"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StopAllCameraShakesOfType"));
PC->Parameters.Add(TEXT("bImmediately"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("StartCameraShake"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UDecalComponent"));
PC = &FC->Functions.Add(TEXT("SetFadeOut"));
PC->Parameters.Add(TEXT("DestroyOwnerAfterFade"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UPostProcessComponent"));
PC = &FC->Functions.Add(TEXT("AddOrUpdateBlendable"));
PC->Parameters.Add(TEXT("InWeight"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UPrimitiveComponent"));
PC = &FC->Functions.Add(TEXT("SetMassOverrideInKg"));
PC->Parameters.Add(TEXT("MassInKg"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bOverrideMass"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetAllMassScale"));
PC->Parameters.Add(TEXT("InMassScale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetMassScale"));
PC->Parameters.Add(TEXT("InMassScale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetCollisionProfileName"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetBoundsScale"));
PC->Parameters.Add(TEXT("NewBoundsScale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("WasRecentlyRendered"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.200000f));

FC = &GDefaultParamCollection.Add(TEXT("ULightComponent"));
PC = &FC->Functions.Add(TEXT("SetLightColor"));
PC->Parameters.Add(TEXT("bSRGB"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("ULocalLightComponent"));
PC = &FC->Functions.Add(TEXT("GetUnitsConversionFactor"));
PC->Parameters.Add(TEXT("CosHalfConeAngle"), new FFloatParamValue(-1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("USplineComponent"));
PC = &FC->Functions.Add(TEXT("SetSplinePointType"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetScaleAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetRotationAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetUpVectorAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetTangentsAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetTangentAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetLocationAtSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetSplinePoints"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("RemoveSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddSplinePointAtIndex"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddSplinePoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddPoints"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddPoint"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("ClearSplinePoints"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetClosedLoopAtPosition"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetClosedLoop"));
PC->Parameters.Add(TEXT("bUpdateSpline"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USkinnedMeshComponent"));
PC = &FC->Functions.Add(TEXT("SetSkeletalMesh"));
PC->Parameters.Add(TEXT("bReinitPose"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USkeletalMeshComponent"));
PC = &FC->Functions.Add(TEXT("SetAllBodiesBelowPhysicsBlendWeight"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetAllBodiesBelowSimulatePhysics"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddImpulseToAllBodiesBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddForceToAllBodiesBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("GetBoneMass"));
PC->Parameters.Add(TEXT("bScaleMass"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEnableGravityOnAllBodiesBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetNotifyRigidBodyCollisionBelow"));
PC->Parameters.Add(TEXT("bIncludeSelf"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetAllowRigidBodyAnimNode"));
PC->Parameters.Add(TEXT("bReinitAnim"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("UnbindClothFromMasterPoseComponent"));
PC->Parameters.Add(TEXT("bRestoreSimulationSpace"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetMorphTarget"));
PC->Parameters.Add(TEXT("bRemoveZeroWeight"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("OverrideAnimationData"));
PC->Parameters.Add(TEXT("bIsLooping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bIsPlaying"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("PlayRate"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetPosition"));
PC->Parameters.Add(TEXT("bFireNotifies"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("ResetAnimInstanceDynamics"));
PC->Parameters.Add(TEXT("InTeleportType"), new FEnumParamValue(2));

FC = &GDefaultParamCollection.Add(TEXT("UInstancedStaticMeshComponent"));
PC = &FC->Functions.Add(TEXT("GetInstancesOverlappingBox"));
PC->Parameters.Add(TEXT("bBoxInWorldSpace"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("GetInstancesOverlappingSphere"));
PC->Parameters.Add(TEXT("bSphereInWorldSpace"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USplineMeshComponent"));
PC = &FC->Functions.Add(TEXT("SetBoundaryMax"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetBoundaryMin"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetSplineUpDir"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetForwardAxis"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEndOffset"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEndRoll"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEndScale"));
PC->Parameters.Add(TEXT("EndScale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartOffset"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartRoll"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartScale"));
PC->Parameters.Add(TEXT("StartScale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartAndEnd"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEndTangent"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetEndPosition"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartTangent"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetStartPosition"));
PC->Parameters.Add(TEXT("bUpdateMesh"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UBoxComponent"));
PC = &FC->Functions.Add(TEXT("SetBoxExtent"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UCapsuleComponent"));
PC = &FC->Functions.Add(TEXT("SetCapsuleHalfHeight"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetCapsuleRadius"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetCapsuleSize"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USphereComponent"));
PC = &FC->Functions.Add(TEXT("SetSphereRadius"));
PC->Parameters.Add(TEXT("bUpdateOverlaps"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USceneCaptureComponent2D"));
PC = &FC->Functions.Add(TEXT("AddOrUpdateBlendable"));
PC->Parameters.Add(TEXT("InWeight"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UAnimSingleNodeInstance"));
PC = &FC->Functions.Add(TEXT("SetAnimationAsset"));
PC->Parameters.Add(TEXT("bIsLooping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PlayAnim"));
PC->Parameters.Add(TEXT("InPlayRate"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetPositionWithPreviousTime"));
PC->Parameters.Add(TEXT("bFireNotifies"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetPosition"));
PC->Parameters.Add(TEXT("bFireNotifies"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UBlueprintPathsLibrary"));
PC = &FC->Functions.Add(TEXT("MakeValidFileName"));
PC->Parameters.Add(TEXT("InReplacementChar"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("CreateTempFilename"));
PC->Parameters.Add(TEXT("Prefix"), new FStringParamValue(TEXT("")));
PC->Parameters.Add(TEXT("Extension"), new FStringParamValue(TEXT(".tmp")));
PC = &FC->Functions.Add(TEXT("ConvertRelativePathToFull"));
PC->Parameters.Add(TEXT("InBasePath"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("GetBaseFilename"));
PC->Parameters.Add(TEXT("bRemovePath"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UGameplayStatics"));
PC = &FC->Functions.Add(TEXT("SuggestProjectileVelocity_CustomArc"));
PC->Parameters.Add(TEXT("ArcParam"), new FFloatParamValue(0.500000f));
PC = &FC->Functions.Add(TEXT("Blueprint_PredictProjectilePath_ByTraceChannel"));
PC->Parameters.Add(TEXT("SimFrequency"), new FFloatParamValue(15.000000f));
PC->Parameters.Add(TEXT("MaxSimTime"), new FFloatParamValue(2.000000f));
PC = &FC->Functions.Add(TEXT("Blueprint_PredictProjectilePath_ByObjectType"));
PC->Parameters.Add(TEXT("SimFrequency"), new FFloatParamValue(15.000000f));
PC->Parameters.Add(TEXT("MaxSimTime"), new FFloatParamValue(2.000000f));
PC = &FC->Functions.Add(TEXT("SpawnDecalAtLocation"));
PC->Parameters.Add(TEXT("Rotation"), new FRotatorParamValue(FRotator(-90.000000f,0.000000f,0.000000f)));
PC = &FC->Functions.Add(TEXT("ActivateReverbEffect"));
PC->Parameters.Add(TEXT("Volume"), new FFloatParamValue(0.500000f));
PC->Parameters.Add(TEXT("FadeTime"), new FFloatParamValue(2.000000f));
PC = &FC->Functions.Add(TEXT("ClearSoundMixClassOverride"));
PC->Parameters.Add(TEXT("FadeOutTime"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetSoundMixClassOverride"));
PC->Parameters.Add(TEXT("Volume"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("Pitch"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("FadeInTime"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bApplyToChildren"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnForceFeedbackAttached"));
PC->Parameters.Add(TEXT("IntensityMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnForceFeedbackAtLocation"));
PC->Parameters.Add(TEXT("IntensityMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnDialogueAttached"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnDialogueAtLocation"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PlayDialogueAtLocation"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SpawnDialogue2D"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PlayDialogue2D"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SpawnSoundAttached"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnSoundAtLocation"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PlaySoundAtLocation"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("CreateSound2D"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnSound2D"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PlaySound2D"));
PC->Parameters.Add(TEXT("VolumeMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("PitchMultiplier"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bIsUISound"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetGlobalListenerFocusParameters"));
PC->Parameters.Add(TEXT("FocusAzimuthScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("NonFocusAzimuthScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("FocusDistanceScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("NonFocusDistanceScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("FocusVolumeScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("NonFocusVolumeScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("FocusPriorityScale"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("NonFocusPriorityScale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SpawnEmitterAttached"));
PC->Parameters.Add(TEXT("Scale"), new FVectorParamValue(FVector(1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAutoActivate"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnEmitterAtLocation"));
PC->Parameters.Add(TEXT("Scale"), new FVectorParamValue(FVector(1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAutoActivateSystem"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PlayWorldCameraShake"));
PC->Parameters.Add(TEXT("Falloff"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("ApplyRadialDamageWithFalloff"));
PC->Parameters.Add(TEXT("DamagePreventionChannel"), new FByteParamValue(3));
PC = &FC->Functions.Add(TEXT("ApplyRadialDamage"));
PC->Parameters.Add(TEXT("DamagePreventionChannel"), new FByteParamValue(3));
PC = &FC->Functions.Add(TEXT("GetCurrentLevelName"));
PC->Parameters.Add(TEXT("bRemovePrefixString"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("OpenLevelBySoftObjectPtr"));
PC->Parameters.Add(TEXT("bAbsolute"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Options"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("OpenLevel"));
PC->Parameters.Add(TEXT("bAbsolute"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Options"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("CreatePlayer"));
PC->Parameters.Add(TEXT("ControllerId"), new FIntParamValue(-1));
PC->Parameters.Add(TEXT("bSpawnPlayerController"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UHealthSnapshotBlueprintLibrary"));
PC = &FC->Functions.Add(TEXT("LogPerformanceSnapshot"));
PC->Parameters.Add(TEXT("bResetStats"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UImportanceSamplingLibrary"));
PC = &FC->Functions.Add(TEXT("NextSobolCell3D"));
PC->Parameters.Add(TEXT("NumCells"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("RandomSobolCell3D"));
PC->Parameters.Add(TEXT("NumCells"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("NextSobolCell2D"));
PC->Parameters.Add(TEXT("NumCells"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("RandomSobolCell2D"));
PC->Parameters.Add(TEXT("NumCells"), new FIntParamValue(1));

FC = &GDefaultParamCollection.Add(TEXT("UKismetInternationalizationLibrary"));
PC = &FC->Functions.Add(TEXT("GetCultureDisplayName"));
PC->Parameters.Add(TEXT("Localized"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("GetSuitableCulture"));
PC->Parameters.Add(TEXT("FallbackCulture"), new FStringParamValue(TEXT("en")));
PC = &FC->Functions.Add(TEXT("GetLocalizedCultures"));
PC->Parameters.Add(TEXT("IncludeGame"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UKismetMathLibrary"));
PC = &FC->Functions.Add(TEXT("PointsAreCoplanar"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.100000f));
PC = &FC->Functions.Add(TEXT("FloatSpringInterp"));
PC->Parameters.Add(TEXT("Mass"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("TEase"));
PC->Parameters.Add(TEXT("BlendExp"), new FFloatParamValue(2.000000f));
PC->Parameters.Add(TEXT("Steps"), new FIntParamValue(2));
PC = &FC->Functions.Add(TEXT("NearlyEqual_TransformTransform"));
PC->Parameters.Add(TEXT("LocationTolerance"), new FFloatParamValue(0.000100f));
PC->Parameters.Add(TEXT("RotationTolerance"), new FFloatParamValue(0.000100f));
PC->Parameters.Add(TEXT("Scale3DTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("MakeFrameRate"));
PC->Parameters.Add(TEXT("Denominator"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("LinearColor_IsNearEqual"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Conv_LinearColorToColor"));
PC->Parameters.Add(TEXT("InUseSRGB"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("HSVToRGB"));
PC->Parameters.Add(TEXT("A"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("LinearColor_SetFromHSV"));
PC->Parameters.Add(TEXT("A"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("LinearColor_SetRGBA"));
PC->Parameters.Add(TEXT("A"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("MakeColor"));
PC->Parameters.Add(TEXT("A"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Quat_Normalized"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Quat_Normalize"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Quat_IsIdentity"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("NotEqual_QuatQuat"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_QuatQuat"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("NotEqual_MatrixMatrix"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_MatrixMatrix"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("REase"));
PC->Parameters.Add(TEXT("BlendExp"), new FFloatParamValue(2.000000f));
PC->Parameters.Add(TEXT("Steps"), new FIntParamValue(2));
PC = &FC->Functions.Add(TEXT("NotEqual_RotatorRotator"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_RotatorRotator"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector4_Normal3"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector4_IsUnit3"));
PC->Parameters.Add(TEXT("SquaredLenthTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector4_IsNearlyZero3"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("NotEqual_Vector4Vector4"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_Vector4Vector4"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("VectorSpringInterp"));
PC->Parameters.Add(TEXT("Mass"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("VEase"));
PC->Parameters.Add(TEXT("BlendExp"), new FFloatParamValue(2.000000f));
PC->Parameters.Add(TEXT("Steps"), new FIntParamValue(2));
PC = &FC->Functions.Add(TEXT("Vector_Normal2D"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Normal"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector_IsUnit"));
PC->Parameters.Add(TEXT("SquaredLenthTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector_IsUniform"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Vector_IsNearlyZero"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("NotEqual_VectorVector"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_VectorVector"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Divide_VectorInt"));
PC->Parameters.Add(TEXT("B"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("Divide_VectorFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Divide_VectorVector"));
PC->Parameters.Add(TEXT("B"), new FVectorParamValue(FVector(1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("CreateVectorFromYawPitch"));
PC->Parameters.Add(TEXT("Length"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("IsNearlyZero2D"));
PC->Parameters.Add(TEXT("Tolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("NotEqual_Vector2DVector2D"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("EqualEqual_Vector2DVector2D"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000100f));
PC = &FC->Functions.Add(TEXT("Divide_Vector2DFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("MakePulsatingValue"));
PC->Parameters.Add(TEXT("InPulsesPerSecond"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Ease"));
PC->Parameters.Add(TEXT("BlendExp"), new FFloatParamValue(2.000000f));
PC->Parameters.Add(TEXT("Steps"), new FIntParamValue(2));
PC = &FC->Functions.Add(TEXT("Log"));
PC->Parameters.Add(TEXT("Base"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("InRange_FloatFloat"));
PC->Parameters.Add(TEXT("InclusiveMin"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("InclusiveMax"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("NearlyEqual_FloatFloat"));
PC->Parameters.Add(TEXT("ErrorTolerance"), new FFloatParamValue(0.000001f));
PC = &FC->Functions.Add(TEXT("Subtract_FloatFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Add_FloatFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Percent_FloatFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("Divide_FloatFloat"));
PC->Parameters.Add(TEXT("B"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("InRange_Int64Int64"));
PC->Parameters.Add(TEXT("InclusiveMin"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("InclusiveMax"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("InRange_IntInt"));
PC->Parameters.Add(TEXT("InclusiveMin"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("InclusiveMax"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("Subtract_IntInt"));
PC->Parameters.Add(TEXT("B"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("Add_IntInt"));
PC->Parameters.Add(TEXT("B"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("Percent_IntInt"));
PC->Parameters.Add(TEXT("B"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("Divide_IntInt"));
PC->Parameters.Add(TEXT("B"), new FIntParamValue(1));
PC = &FC->Functions.Add(TEXT("Subtract_ByteByte"));
PC->Parameters.Add(TEXT("B"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("Add_ByteByte"));
PC->Parameters.Add(TEXT("B"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("Percent_ByteByte"));
PC->Parameters.Add(TEXT("B"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("Divide_ByteByte"));
PC->Parameters.Add(TEXT("B"), new FByteParamValue(1));

FC = &GDefaultParamCollection.Add(TEXT("UKismetRenderingLibrary"));
PC = &FC->Functions.Add(TEXT("RenderTargetCreateStaticTexture2DEditorOnly"));
PC->Parameters.Add(TEXT("Name"), new FStringParamValue(TEXT("Texture")));
PC = &FC->Functions.Add(TEXT("CreateRenderTargetVolume"));
PC->Parameters.Add(TEXT("Width"), new FIntParamValue(16));
PC->Parameters.Add(TEXT("Height"), new FIntParamValue(16));
PC->Parameters.Add(TEXT("Depth"), new FIntParamValue(16));
PC->Parameters.Add(TEXT("Format"), new FByteParamValue(6));
PC->Parameters.Add(TEXT("ClearColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("CreateRenderTarget2DArray"));
PC->Parameters.Add(TEXT("Width"), new FIntParamValue(256));
PC->Parameters.Add(TEXT("Height"), new FIntParamValue(256));
PC->Parameters.Add(TEXT("Slices"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("Format"), new FByteParamValue(6));
PC->Parameters.Add(TEXT("ClearColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("CreateRenderTarget2D"));
PC->Parameters.Add(TEXT("Width"), new FIntParamValue(256));
PC->Parameters.Add(TEXT("Height"), new FIntParamValue(256));
PC->Parameters.Add(TEXT("Format"), new FByteParamValue(6));
PC->Parameters.Add(TEXT("ClearColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("ClearRenderTarget2D"));
PC->Parameters.Add(TEXT("ClearColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,0.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UKismetStringLibrary"));
PC = &FC->Functions.Add(TEXT("Split"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("ReplaceInline"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("Replace"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("MatchesWildcard"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("EndsWith"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("StartsWith"));
PC->Parameters.Add(TEXT("SearchCase"), new FByteParamValue(1));
PC = &FC->Functions.Add(TEXT("JoinStringArray"));
PC->Parameters.Add(TEXT("Separator"), new FStringParamValue(TEXT(" ")));
PC = &FC->Functions.Add(TEXT("ParseIntoArray"));
PC->Parameters.Add(TEXT("Delimiter"), new FStringParamValue(TEXT(" ")));
PC->Parameters.Add(TEXT("CullEmptyStrings"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("FindSubstring"));
PC->Parameters.Add(TEXT("StartPosition"), new FIntParamValue(-1));
PC = &FC->Functions.Add(TEXT("GetSubstring"));
PC->Parameters.Add(TEXT("Length"), new FIntParamValue(1));

FC = &GDefaultParamCollection.Add(TEXT("UKismetSystemLibrary"));
PC = &FC->Functions.Add(TEXT("DrawDebugFloatHistoryLocation"));
PC->Parameters.Add(TEXT("DrawColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugFloatHistoryTransform"));
PC->Parameters.Add(TEXT("DrawColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugCamera"));
PC->Parameters.Add(TEXT("CameraColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugFrustum"));
PC->Parameters.Add(TEXT("FrustumColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugPlane"));
PC->Parameters.Add(TEXT("PlaneColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugString"));
PC->Parameters.Add(TEXT("TextColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugCapsule"));
PC->Parameters.Add(TEXT("LineColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugConeInDegrees"));
PC->Parameters.Add(TEXT("Length"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("AngleWidth"), new FFloatParamValue(45.000000f));
PC->Parameters.Add(TEXT("AngleHeight"), new FFloatParamValue(45.000000f));
PC->Parameters.Add(TEXT("NumSides"), new FIntParamValue(12));
PC->Parameters.Add(TEXT("LineColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugCylinder"));
PC->Parameters.Add(TEXT("Radius"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("Segments"), new FIntParamValue(12));
PC->Parameters.Add(TEXT("LineColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugSphere"));
PC->Parameters.Add(TEXT("Radius"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("Segments"), new FIntParamValue(12));
PC->Parameters.Add(TEXT("LineColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawDebugCoordinateSystem"));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawDebugCircle"));
PC->Parameters.Add(TEXT("NumSegments"), new FIntParamValue(12));
PC->Parameters.Add(TEXT("LineColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("YAxis"), new FVectorParamValue(FVector(0.000000f,1.000000f,0.000000f)));
PC->Parameters.Add(TEXT("ZAxis"), new FVectorParamValue(FVector(0.000000f,0.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("CapsuleTraceMultiByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("CapsuleTraceSingleByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceMultiByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceSingleByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceMultiByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceSingleByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceMultiByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceSingleByProfile"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("CapsuleTraceMultiForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("CapsuleTraceSingleForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceMultiForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceSingleForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceMultiForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceSingleForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceMultiForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceSingleForObjects"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("CapsuleTraceMulti"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("CapsuleTraceSingle"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceMulti"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("BoxTraceSingle"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceMulti"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("SphereTraceSingle"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceMulti"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceSingle"));
PC->Parameters.Add(TEXT("TraceColor"), new FLinearColorParamValue(FLinearColor(1.000000f,0.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("TraceHitColor"), new FLinearColorParamValue(FLinearColor(0.000000f,1.000000f,0.000000f,1.000000f)));
PC->Parameters.Add(TEXT("DrawTime"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("PrintText"));
PC->Parameters.Add(TEXT("InText"), new FTextParamValue(INVTEXT("Hello")));
PC->Parameters.Add(TEXT("bPrintToScreen"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bPrintToLog"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("TextColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.660000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("Duration"), new FFloatParamValue(2.000000f));
PC = &FC->Functions.Add(TEXT("PrintString"));
PC->Parameters.Add(TEXT("InString"), new FStringParamValue(TEXT("Hello")));
PC->Parameters.Add(TEXT("bPrintToScreen"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bPrintToLog"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("TextColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.660000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("Duration"), new FFloatParamValue(2.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UKismetTextLibrary"));
PC = &FC->Functions.Add(TEXT("AsTimeZoneTime_DateTime"));
PC->Parameters.Add(TEXT("InTimeZone"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("AsTimeZoneDateTime_DateTime"));
PC->Parameters.Add(TEXT("InTimeZone"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("AsTimeZoneDate_DateTime"));
PC->Parameters.Add(TEXT("InTimeZone"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("AsPercent_Float"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));
PC->Parameters.Add(TEXT("MaximumFractionalDigits"), new FIntParamValue(3));
PC = &FC->Functions.Add(TEXT("AsCurrency_Float"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));
PC->Parameters.Add(TEXT("MaximumFractionalDigits"), new FIntParamValue(3));
PC->Parameters.Add(TEXT("CurrencyCode"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("AsCurrency_Integer"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));
PC->Parameters.Add(TEXT("MaximumFractionalDigits"), new FIntParamValue(3));
PC->Parameters.Add(TEXT("CurrencyCode"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("Conv_FloatToText"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));
PC->Parameters.Add(TEXT("MaximumFractionalDigits"), new FIntParamValue(3));
PC = &FC->Functions.Add(TEXT("Conv_Int64ToText"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));
PC = &FC->Functions.Add(TEXT("Conv_IntToText"));
PC->Parameters.Add(TEXT("bUseGrouping"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("MinimumIntegralDigits"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("MaximumIntegralDigits"), new FIntParamValue(324));

FC = &GDefaultParamCollection.Add(TEXT("UMeshVertexPainterKismetLibrary"));
PC = &FC->Functions.Add(TEXT("PaintVerticesLerpAlongAxis"));
PC->Parameters.Add(TEXT("bConvertToSRGB"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("PaintVerticesSingleColor"));
PC->Parameters.Add(TEXT("bConvertToSRGB"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UStereoLayerFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("SetSplashScreen"));
PC->Parameters.Add(TEXT("Scale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UVisualLoggerKismetLibrary"));
PC = &FC->Functions.Add(TEXT("LogSegment"));
PC->Parameters.Add(TEXT("ObjectColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("CategoryName"), new FNameParamValue(FName("VisLogBP")));
PC = &FC->Functions.Add(TEXT("LogBox"));
PC->Parameters.Add(TEXT("ObjectColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("LogCategory"), new FNameParamValue(FName("VisLogBP")));
PC = &FC->Functions.Add(TEXT("LogLocation"));
PC->Parameters.Add(TEXT("ObjectColor"), new FLinearColorParamValue(FLinearColor(0.000000f,0.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("Radius"), new FFloatParamValue(10.000000f));
PC->Parameters.Add(TEXT("LogCategory"), new FNameParamValue(FName("VisLogBP")));
PC = &FC->Functions.Add(TEXT("LogText"));
PC->Parameters.Add(TEXT("LogCategory"), new FNameParamValue(FName("VisLogBP")));

FC = &GDefaultParamCollection.Add(TEXT("ULevelStreamingDynamic"));
PC = &FC->Functions.Add(TEXT("LoadLevelInstanceBySoftObjectPtr"));
PC->Parameters.Add(TEXT("OptionalLevelNameOverride"), new FStringParamValue(TEXT("")));
PC = &FC->Functions.Add(TEXT("LoadLevelInstance"));
PC->Parameters.Add(TEXT("OptionalLevelNameOverride"), new FStringParamValue(TEXT("")));

FC = &GDefaultParamCollection.Add(TEXT("USoundSubmix"));
PC = &FC->Functions.Add(TEXT("StartSpectralAnalysis"));
PC->Parameters.Add(TEXT("InterpolationMethod"), new FEnumParamValue(1));
PC->Parameters.Add(TEXT("WindowType"), new FEnumParamValue(2));
PC = &FC->Functions.Add(TEXT("AddSpectralAnalysisDelegate"));
PC->Parameters.Add(TEXT("UpdateRate"), new FFloatParamValue(10.000000f));
PC->Parameters.Add(TEXT("DecibelNoiseFloor"), new FFloatParamValue(-40.000000f));
PC->Parameters.Add(TEXT("bDoNormalize"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("AutoRangeAttackTime"), new FFloatParamValue(0.100000f));
PC->Parameters.Add(TEXT("AutoRangeReleaseTime"), new FFloatParamValue(60.000000f));

FC = &GDefaultParamCollection.Add(TEXT("USkeletalMesh"));
PC = &FC->Functions.Add(TEXT("IsSectionUsingCloth"));
PC->Parameters.Add(TEXT("bCheckCorrespondingSections"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UStaticMesh"));
PC = &FC->Functions.Add(TEXT("SetLODGroup"));
PC->Parameters.Add(TEXT("bRebuildImmediately"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UCanvasRenderTarget2D"));
PC = &FC->Functions.Add(TEXT("CreateCanvasRenderTarget2D"));
PC->Parameters.Add(TEXT("Width"), new FIntParamValue(1024));
PC->Parameters.Add(TEXT("Height"), new FIntParamValue(1024));

FC = &GDefaultParamCollection.Add(TEXT("UViewportStatsSubsystem"));
PC = &FC->Functions.Add(TEXT("AddTimedDisplay"));
PC->Parameters.Add(TEXT("Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UAudioMixerBlueprintLibrary"));
PC = &FC->Functions.Add(TEXT("MakePresetSpectralAnalysisBandSettings"));
PC->Parameters.Add(TEXT("InNumBands"), new FIntParamValue(10));
PC->Parameters.Add(TEXT("InAttackTimeMsec"), new FIntParamValue(10));
PC->Parameters.Add(TEXT("InReleaseTimeMsec"), new FIntParamValue(10));
PC = &FC->Functions.Add(TEXT("MakeFullSpectrumSpectralAnalysisBandSettings"));
PC->Parameters.Add(TEXT("InNumBands"), new FIntParamValue(30));
PC->Parameters.Add(TEXT("InMinimumFrequency"), new FFloatParamValue(40.000000f));
PC->Parameters.Add(TEXT("InMaximumFrequency"), new FFloatParamValue(16000.000000f));
PC->Parameters.Add(TEXT("InAttackTimeMsec"), new FIntParamValue(10));
PC->Parameters.Add(TEXT("InReleaseTimeMsec"), new FIntParamValue(10));
PC = &FC->Functions.Add(TEXT("MakeMusicalSpectralAnalysisBandSettings"));
PC->Parameters.Add(TEXT("InNumSemitones"), new FIntParamValue(60));
PC->Parameters.Add(TEXT("InStartingOctave"), new FIntParamValue(2));
PC->Parameters.Add(TEXT("InAttackTimeMsec"), new FIntParamValue(10));
PC->Parameters.Add(TEXT("InReleaseTimeMsec"), new FIntParamValue(10));
PC = &FC->Functions.Add(TEXT("StartAnalyzingOutput"));
PC->Parameters.Add(TEXT("InterpolationMethod"), new FEnumParamValue(1));
PC->Parameters.Add(TEXT("WindowType"), new FEnumParamValue(2));

FC = &GDefaultParamCollection.Add(TEXT("UQuartzClockHandle"));
PC = &FC->Functions.Add(TEXT("SetBeatsPerMinute"));
PC->Parameters.Add(TEXT("BeatsPerMinute"), new FFloatParamValue(60.000000f));
PC = &FC->Functions.Add(TEXT("SetThirtySecondNotesPerMinute"));
PC->Parameters.Add(TEXT("ThirtySecondsNotesPerMinute"), new FFloatParamValue(960.000000f));
PC = &FC->Functions.Add(TEXT("SetSecondsPerTick"));
PC->Parameters.Add(TEXT("SecondsPerTick"), new FFloatParamValue(0.250000f));
PC = &FC->Functions.Add(TEXT("SetTicksPerSecond"));
PC->Parameters.Add(TEXT("TicksPerSecond"), new FFloatParamValue(10.000000f));
PC = &FC->Functions.Add(TEXT("SetMillisecondsPerTick"));
PC->Parameters.Add(TEXT("MillisecondsPerTick"), new FFloatParamValue(100.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UMediaBlueprintFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("EnumerateWebcamCaptureDevices"));
PC->Parameters.Add(TEXT("Filter"), new FIntParamValue(-1));
PC = &FC->Functions.Add(TEXT("EnumerateVideoCaptureDevices"));
PC->Parameters.Add(TEXT("Filter"), new FIntParamValue(-1));
PC = &FC->Functions.Add(TEXT("EnumerateAudioCaptureDevices"));
PC->Parameters.Add(TEXT("Filter"), new FIntParamValue(-1));

FC = &GDefaultParamCollection.Add(TEXT("UMediaSoundComponent"));
PC = &FC->Functions.Add(TEXT("SetSpectralAnalysisSettings"));
PC->Parameters.Add(TEXT("InFFTSize"), new FEnumParamValue(2));

FC = &GDefaultParamCollection.Add(TEXT("UMovieSceneSequencePlayer"));
PC = &FC->Functions.Add(TEXT("PlayLooping"));
PC->Parameters.Add(TEXT("NumLoops"), new FIntParamValue(-1));

FC = &GDefaultParamCollection.Add(TEXT("UKismetAnimationLibrary"));
PC = &FC->Functions.Add(TEXT("K2_EndProfilingTimer"));
PC->Parameters.Add(TEXT("bLog"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("LogPrefix"), new FStringParamValue(TEXT("")));

FC = &GDefaultParamCollection.Add(TEXT("UPlayMontageCallbackProxy"));
PC = &FC->Functions.Add(TEXT("CreateProxyObjectForPlayMontage"));
PC->Parameters.Add(TEXT("PlayRate"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UWidgetAnimationPlayCallbackProxy"));
PC = &FC->Functions.Add(TEXT("CreatePlayAnimationTimeRangeProxyObject"));
PC->Parameters.Add(TEXT("NumLoopsToPlay"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("CreatePlayAnimationProxyObject"));
PC->Parameters.Add(TEXT("NumLoopsToPlay"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UWidgetBlueprintLibrary"));
PC = &FC->Functions.Add(TEXT("GetAllWidgetsOfClass"));
PC->Parameters.Add(TEXT("TopLevelOnly"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("MakeBrushFromMaterial"));
PC->Parameters.Add(TEXT("Width"), new FIntParamValue(32));
PC->Parameters.Add(TEXT("Height"), new FIntParamValue(32));
PC = &FC->Functions.Add(TEXT("DrawTextFormatted"));
PC->Parameters.Add(TEXT("FontSize"), new FIntParamValue(16));
PC->Parameters.Add(TEXT("FontTypeFace"), new FNameParamValue(FName("Regular")));
PC->Parameters.Add(TEXT("Tint"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawText"));
PC->Parameters.Add(TEXT("Tint"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("DrawLines"));
PC->Parameters.Add(TEXT("Tint"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bAntiAlias"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Thickness"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawLine"));
PC->Parameters.Add(TEXT("Tint"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bAntiAlias"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Thickness"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("DrawBox"));
PC->Parameters.Add(TEXT("Tint"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("SetInputMode_GameAndUIEx"));
PC->Parameters.Add(TEXT("bHideCursorDuringCapture"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetInputMode_GameAndUI"));
PC->Parameters.Add(TEXT("bHideCursorDuringCapture"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UWidget"));
PC = &FC->Functions.Add(TEXT("HasMouseCaptureByUser"));
PC->Parameters.Add(TEXT("PointerIndex"), new FIntParamValue(-1));

FC = &GDefaultParamCollection.Add(TEXT("UUserWidget"));
PC = &FC->Functions.Add(TEXT("SetPlaybackSpeed"));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PlayAnimationReverse"));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PlayAnimationForward"));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PlayAnimationTimeRange"));
PC->Parameters.Add(TEXT("NumLoopsToPlay"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("PlayAnimation"));
PC->Parameters.Add(TEXT("NumLoopsToPlay"), new FIntParamValue(1));
PC->Parameters.Add(TEXT("PlaybackSpeed"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("SetPositionInViewport"));
PC->Parameters.Add(TEXT("bRemoveDPIScale"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UScrollBox"));
PC = &FC->Functions.Add(TEXT("ScrollWidgetIntoView"));
PC->Parameters.Add(TEXT("AnimateScroll"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("ALevelSequenceMediaController"));
PC = &FC->Functions.Add(TEXT("SynchronizeToServer"));
PC->Parameters.Add(TEXT("DesyncThresholdSeconds"), new FFloatParamValue(2.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UProceduralFoliageSpawner"));
PC = &FC->Functions.Add(TEXT("Simulate"));
PC->Parameters.Add(TEXT("NumSteps"), new FIntParamValue(-1));

FC = &GDefaultParamCollection.Add(TEXT("ALandscapeProxy"));
PC = &FC->Functions.Add(TEXT("LandscapeExportHeightmapToRenderTarget"));
PC->Parameters.Add(TEXT("InExportLandscapeProxies"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("EditorApplySpline"));
PC->Parameters.Add(TEXT("StartWidth"), new FFloatParamValue(200.000000f));
PC->Parameters.Add(TEXT("EndWidth"), new FFloatParamValue(200.000000f));
PC->Parameters.Add(TEXT("StartSideFalloff"), new FFloatParamValue(200.000000f));
PC->Parameters.Add(TEXT("EndSideFalloff"), new FFloatParamValue(200.000000f));
PC->Parameters.Add(TEXT("NumSubdivisions"), new FIntParamValue(20));
PC->Parameters.Add(TEXT("bRaiseHeights"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bLowerHeights"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("EditLayerName"), new FNameParamValue(FName("")));

FC = &GDefaultParamCollection.Add(TEXT("UNavigationPath"));
PC = &FC->Functions.Add(TEXT("EnableDebugDrawing"));
PC->Parameters.Add(TEXT("PathColor"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UNavigationSystemV1"));
PC = &FC->Functions.Add(TEXT("RegisterNavigationInvoker"));
PC->Parameters.Add(TEXT("TileGenerationRadius"), new FFloatParamValue(3000.000000f));
PC->Parameters.Add(TEXT("TileRemovalRadius"), new FFloatParamValue(5000.000000f));
PC = &FC->Functions.Add(TEXT("FindPathToActorSynchronously"));
PC->Parameters.Add(TEXT("TetherDistance"), new FFloatParamValue(50.000000f));

FC = &GDefaultParamCollection.Add(TEXT("ARecastNavMesh"));
PC = &FC->Functions.Add(TEXT("K2_ReplaceAreaInTileBounds"));
PC->Parameters.Add(TEXT("ReplaceLinks"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UGameplayTask_ClaimResource"));
PC = &FC->Functions.Add(TEXT("ClaimResources"));
PC->Parameters.Add(TEXT("Priority"), new FByteParamValue(192));
PC = &FC->Functions.Add(TEXT("ClaimResource"));
PC->Parameters.Add(TEXT("Priority"), new FByteParamValue(192));

FC = &GDefaultParamCollection.Add(TEXT("UGameplayTask_WaitDelay"));
PC = &FC->Functions.Add(TEXT("TaskWaitDelay"));
PC->Parameters.Add(TEXT("Priority"), new FByteParamValue(192));

FC = &GDefaultParamCollection.Add(TEXT("UAIBlueprintHelperLibrary"));
PC = &FC->Functions.Add(TEXT("SendAIMessage"));
PC->Parameters.Add(TEXT("bSuccess"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("CreateMoveToProxyObject"));
PC->Parameters.Add(TEXT("AcceptanceRadius"), new FFloatParamValue(5.000000f));

FC = &GDefaultParamCollection.Add(TEXT("AAIController"));
PC = &FC->Functions.Add(TEXT("MoveToLocation"));
PC->Parameters.Add(TEXT("AcceptanceRadius"), new FFloatParamValue(-1.000000f));
PC->Parameters.Add(TEXT("bStopOnOverlap"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUsePathfinding"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bCanStrafe"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAllowPartialPath"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("MoveToActor"));
PC->Parameters.Add(TEXT("AcceptanceRadius"), new FFloatParamValue(-1.000000f));
PC->Parameters.Add(TEXT("bStopOnOverlap"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUsePathfinding"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bCanStrafe"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAllowPartialPath"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UNavLocalGridManager"));
PC = &FC->Functions.Add(TEXT("RemoveLocalNavigationGrid"));
PC->Parameters.Add(TEXT("bRebuildGrids"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddLocalNavigationGridForCapsule"));
PC->Parameters.Add(TEXT("Radius2D"), new FIntParamValue(5));
PC->Parameters.Add(TEXT("Height"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("bRebuildGrids"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddLocalNavigationGridForBox"));
PC->Parameters.Add(TEXT("Extent"), new FVectorParamValue(FVector(1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("Radius2D"), new FIntParamValue(5));
PC->Parameters.Add(TEXT("Height"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("bRebuildGrids"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddLocalNavigationGridForPoints"));
PC->Parameters.Add(TEXT("Radius2D"), new FIntParamValue(5));
PC->Parameters.Add(TEXT("Height"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("bRebuildGrids"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddLocalNavigationGridForPoint"));
PC->Parameters.Add(TEXT("Radius2D"), new FIntParamValue(5));
PC->Parameters.Add(TEXT("Height"), new FFloatParamValue(100.000000f));
PC->Parameters.Add(TEXT("bRebuildGrids"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UPawnActionsComponent"));
PC = &FC->Functions.Add(TEXT("K2_PerformAction"));
PC->Parameters.Add(TEXT("Priority"), new FByteParamValue(2));

FC = &GDefaultParamCollection.Add(TEXT("UAISense_Hearing"));
PC = &FC->Functions.Add(TEXT("ReportNoiseEvent"));
PC->Parameters.Add(TEXT("Loudness"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UAITask_MoveTo"));
PC = &FC->Functions.Add(TEXT("AIMoveTo"));
PC->Parameters.Add(TEXT("AcceptanceRadius"), new FFloatParamValue(-1.000000f));
PC->Parameters.Add(TEXT("bUsePathfinding"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bLockAILogic"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UBTTask_BlueprintBase"));
PC = &FC->Functions.Add(TEXT("SetFinishOnMessageWithId"));
PC->Parameters.Add(TEXT("RequestID"), new FIntParamValue(-1));

FC = &GDefaultParamCollection.Add(TEXT("UARBlueprintLibrary"));
PC = &FC->Functions.Add(TEXT("AddTrackedPointWithName"));
PC->Parameters.Add(TEXT("bDeletePointsWithSameName"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetARWorldOriginLocationAndRotation"));
PC->Parameters.Add(TEXT("bIsTransformInWorldSpace"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bMaintainUpDirection"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("GetObjectClassificationAtLocation"));
PC->Parameters.Add(TEXT("MaxLocationDiff"), new FFloatParamValue(10.000000f));
PC = &FC->Functions.Add(TEXT("DebugDrawPin"));
PC->Parameters.Add(TEXT("Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,0.000000f,0.750000f)));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("DebugDrawTrackedGeometry"));
PC->Parameters.Add(TEXT("Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,0.000000f,0.750000f)));
PC->Parameters.Add(TEXT("OutlineThickness"), new FFloatParamValue(5.000000f));
PC = &FC->Functions.Add(TEXT("LineTraceTrackedObjects3D"));
PC->Parameters.Add(TEXT("bTestFeaturePoints"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestGroundPlane"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestPlaneExtents"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestPlaneBoundaryPolygon"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("LineTraceTrackedObjects"));
PC->Parameters.Add(TEXT("bTestFeaturePoints"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestGroundPlane"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestPlaneExtents"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bTestPlaneBoundaryPolygon"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UARMeshGeometry"));
PC = &FC->Functions.Add(TEXT("GetObjectClassificationAtLocation"));
PC->Parameters.Add(TEXT("MaxLocationDiff"), new FFloatParamValue(10.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UHeadMountedDisplayFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("EnumerateTrackedDevices"));
PC->Parameters.Add(TEXT("DeviceType"), new FEnumParamValue(-1));
PC = &FC->Functions.Add(TEXT("SetSpectatorScreenModeTexturePlusEyeLayout"));
PC->Parameters.Add(TEXT("bDrawEyeFirst"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetWorldToMetersScale"));
PC->Parameters.Add(TEXT("NewScale"), new FFloatParamValue(100.000000f));
PC = &FC->Functions.Add(TEXT("ResetOrientationAndPosition"));
PC->Parameters.Add(TEXT("Options"), new FByteParamValue(2));

FC = &GDefaultParamCollection.Add(TEXT("UXRLoadingScreenFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("AddLoadingScreenSplash"));
PC->Parameters.Add(TEXT("Size"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("SetLoadingScreen"));
PC->Parameters.Add(TEXT("Scale"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UPaperGroupedSpriteComponent"));
PC = &FC->Functions.Add(TEXT("UpdateInstanceColor"));
PC->Parameters.Add(TEXT("bMarkRenderStateDirty"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("UpdateInstanceTransform"));
PC->Parameters.Add(TEXT("bMarkRenderStateDirty"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("AddInstance"));
PC->Parameters.Add(TEXT("Color"), new FLinearColorParamValue(FLinearColor(1.000000f,1.000000f,1.000000f,1.000000f)));

FC = &GDefaultParamCollection.Add(TEXT("UPaperTileMapComponent"));
PC = &FC->Functions.Add(TEXT("SetLayerCollision"));
PC->Parameters.Add(TEXT("bHasCollision"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bOverrideThickness"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("CustomThickness"), new FFloatParamValue(50.000000f));
PC->Parameters.Add(TEXT("bRebuildCollision"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetDefaultCollisionThickness"));
PC->Parameters.Add(TEXT("bRebuildCollision"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("CreateNewTileMap"));
PC->Parameters.Add(TEXT("MapWidth"), new FIntParamValue(4));
PC->Parameters.Add(TEXT("MapHeight"), new FIntParamValue(4));
PC->Parameters.Add(TEXT("TileWidth"), new FIntParamValue(32));
PC->Parameters.Add(TEXT("TileHeight"), new FIntParamValue(32));
PC->Parameters.Add(TEXT("PixelsPerUnrealUnit"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("bCreateLayer"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UKismetProceduralMeshLibrary"));
PC = &FC->Functions.Add(TEXT("CreateGridMeshSplit"));
PC->Parameters.Add(TEXT("GridSpacing"), new FFloatParamValue(16.000000f));
PC = &FC->Functions.Add(TEXT("CreateGridMeshWelded"));
PC->Parameters.Add(TEXT("GridSpacing"), new FFloatParamValue(16.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UVariant"));
PC = &FC->Functions.Add(TEXT("SetThumbnailFromCamera"));
PC->Parameters.Add(TEXT("FOVDegrees"), new FFloatParamValue(50.000000f));
PC->Parameters.Add(TEXT("MinZ"), new FFloatParamValue(50.000000f));
PC->Parameters.Add(TEXT("Gamma"), new FFloatParamValue(2.200000f));

FC = &GDefaultParamCollection.Add(TEXT("UVariantSet"));
PC = &FC->Functions.Add(TEXT("SetThumbnailFromCamera"));
PC->Parameters.Add(TEXT("FOVDegrees"), new FFloatParamValue(50.000000f));
PC->Parameters.Add(TEXT("MinZ"), new FFloatParamValue(50.000000f));
PC->Parameters.Add(TEXT("Gamma"), new FFloatParamValue(2.200000f));

FC = &GDefaultParamCollection.Add(TEXT("UAutomationUtilsBlueprintLibrary"));
PC = &FC->Functions.Add(TEXT("TakeGameplayAutomationScreenshot"));
PC->Parameters.Add(TEXT("MaxGlobalError"), new FFloatParamValue(0.020000f));
PC->Parameters.Add(TEXT("MaxLocalError"), new FFloatParamValue(0.120000f));
PC->Parameters.Add(TEXT("MapNameOverride"), new FStringParamValue(TEXT("")));

FC = &GDefaultParamCollection.Add(TEXT("UNiagaraFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("SpawnSystemAttached"));
PC->Parameters.Add(TEXT("bAutoActivate"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bPreCullCheck"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SpawnSystemAtLocation"));
PC->Parameters.Add(TEXT("Scale"), new FVectorParamValue(FVector(1.000000f,1.000000f,1.000000f)));
PC->Parameters.Add(TEXT("bAutoDestroy"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bAutoActivate"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bPreCullCheck"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UMagicLeapHMDFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("SetStabilizationDepthActor"));
PC->Parameters.Add(TEXT("bSetFocusActor"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetFocusActor"));
PC->Parameters.Add(TEXT("bSetStabilizationActor"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UMagicLeapHandTrackingFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("SetConfiguration"));
PC->Parameters.Add(TEXT("bTrackingEnabled"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("UAchievementWriteCallbackProxy"));
PC = &FC->Functions.Add(TEXT("WriteAchievementProgress"));
PC->Parameters.Add(TEXT("Progress"), new FFloatParamValue(100.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UAppleImageUtilsBaseAsyncTaskBlueprintProxy"));
PC = &FC->Functions.Add(TEXT("CreateProxyObjectForConvertToPNG"));
PC->Parameters.Add(TEXT("bWantColor"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUseGpu"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("CreateProxyObjectForConvertToTIFF"));
PC->Parameters.Add(TEXT("bWantColor"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUseGpu"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("CreateProxyObjectForConvertToHEIF"));
PC->Parameters.Add(TEXT("Quality"), new FIntParamValue(85));
PC->Parameters.Add(TEXT("bWantColor"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUseGpu"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));
PC = &FC->Functions.Add(TEXT("CreateProxyObjectForConvertToJPEG"));
PC->Parameters.Add(TEXT("Quality"), new FIntParamValue(85));
PC->Parameters.Add(TEXT("bWantColor"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("bUseGpu"), new FBoolParamValue(true));
PC->Parameters.Add(TEXT("Scale"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UOculusFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("AddLoadingSplashScreen"));
PC->Parameters.Add(TEXT("SizeInMeters"), new FVector2DParamValue(FVector2D(1.000000f,1.000000f)));
PC = &FC->Functions.Add(TEXT("GetRawSensorData"));
PC->Parameters.Add(TEXT("DeviceType"), new FEnumParamValue(1));

FC = &GDefaultParamCollection.Add(TEXT("UOculusMRFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("SetMrcScalingFactor"));
PC->Parameters.Add(TEXT("ScalingFactor"), new FFloatParamValue(1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UOculusInputFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("InitializeHandPhysics"));
PC->Parameters.Add(TEXT("WorldToMeters"), new FFloatParamValue(100.000000f));
PC = &FC->Functions.Add(TEXT("GetHandSkeletalMesh"));
PC->Parameters.Add(TEXT("WorldToMeters"), new FFloatParamValue(100.000000f));

FC = &GDefaultParamCollection.Add(TEXT("USteamVRInputDeviceFunctionLibrary"));
PC = &FC->Functions.Add(TEXT("FindSteamVR_InputBindingInfo"));
PC->Parameters.Add(TEXT("ActionSet"), new FNameParamValue(FName("main")));
PC = &FC->Functions.Add(TEXT("FindSteamVR_ActionOrigin"));
PC->Parameters.Add(TEXT("ActionSet"), new FNameParamValue(FName("main")));
PC = &FC->Functions.Add(TEXT("FindSteamVR_OriginTrackedDeviceInfo"));
PC->Parameters.Add(TEXT("ActionSet"), new FNameParamValue(FName("main")));
PC = &FC->Functions.Add(TEXT("FindSteamVR_Action"));
PC->Parameters.Add(TEXT("ActionSet"), new FNameParamValue(FName("main")));
PC = &FC->Functions.Add(TEXT("PlaySteamVR_HapticFeedback"));
PC->Parameters.Add(TEXT("DurationSeconds"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("Frequency"), new FFloatParamValue(1.000000f));
PC->Parameters.Add(TEXT("Amplitude"), new FFloatParamValue(0.500000f));

FC = &GDefaultParamCollection.Add(TEXT("UGranularSynth"));
PC = &FC->Functions.Add(TEXT("NoteOn"));
PC->Parameters.Add(TEXT("Duration"), new FFloatParamValue(-1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("UModularSynthComponent"));
PC = &FC->Functions.Add(TEXT("NoteOn"));
PC->Parameters.Add(TEXT("Duration"), new FFloatParamValue(-1.000000f));

FC = &GDefaultParamCollection.Add(TEXT("USynthSamplePlayer"));
PC = &FC->Functions.Add(TEXT("SeekToTime"));
PC->Parameters.Add(TEXT("bWrap"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USpineWidget"));
PC = &FC->Functions.Add(TEXT("Tick"));
PC->Parameters.Add(TEXT("CallDelegates"), new FBoolParamValue(true));
PC = &FC->Functions.Add(TEXT("SetPlaybackTime"));
PC->Parameters.Add(TEXT("bCallDelegates"), new FBoolParamValue(true));

FC = &GDefaultParamCollection.Add(TEXT("USpineSkeletonAnimationComponent"));
PC = &FC->Functions.Add(TEXT("SetPlaybackTime"));
PC->Parameters.Add(TEXT("bCallDelegates"), new FBoolParamValue(true));

